name: Manage VPN Infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform: deploy, start, stop, or destroy'
        required: true
        default: 'deploy'
        options:
          - deploy
          - start
          - stop
          - destroy

jobs:
  manage-vpn:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install Pulumi
    - name: Install Pulumi
      uses: pulumi/actions@v4
      with:
        command: preview  # No action here; actions are handled manually below

    # Step 3: Configure AWS CLI with credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Step 4: Configure Pulumi stack
    - name: Configure Pulumi Stack
      run: |
        pulumi stack select dev
        pulumi config set aws:region ${{ secrets.AWS_REGION }} --plaintext
        pulumi config set vpn:public_key ${{ secrets.SSH_PUBLIC_KEY }} --plaintext

    # Step 5: Perform the requested action
    - name: Perform Action
      run: |
        case "${{ github.event.inputs.action }}" in
          deploy)
            echo "Deploying infrastructure..."
            pulumi up --yes
            ;;
          start)
            echo "Starting EC2 instance..."
            # Get the instance ID using the public IP from Pulumi outputs
            INSTANCE_ID=$(pulumi stack output instance_public_ip | xargs -n1 aws ec2 describe-instances --filters "Name=ip-address,Values={}" --query "Reservations[0].Instances[0].InstanceId" --output text)
            aws ec2 start-instances --instance-ids $INSTANCE_ID
            ;;
          stop)
            echo "Stopping EC2 instance..."
            # Get the instance ID using the public IP from Pulumi outputs
            INSTANCE_ID=$(pulumi stack output instance_public_ip | xargs -n1 aws ec2 describe-instances --filters "Name=ip-address,Values={}" --query "Reservations[0].Instances[0].InstanceId" --output text)
            aws ec2 stop-instances --instance-ids $INSTANCE_ID
            ;;
          destroy)
            echo "Destroying infrastructure..."
            pulumi destroy --yes
            ;;
          *)
            echo "Invalid action. Use deploy, start, stop, or destroy."
            exit 1
            ;;
        esac
